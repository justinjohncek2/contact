{"version":3,"sources":["components/Contacts/Form/index.js","components/Contacts/List/index.js","components/Contacts/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","contacts","addContacts","initialValues","full_name","phone_number","useState","form","setForm","onChangeInput","e","target","name","value","onSubmit","preventDefault","alert","onChange","type","placeholder","maxLength","id","List","filteredText","setFilteredText","filteredData","filter","item","Object","keys","some","key","toString","toLowerCase","includes","toLocaleLowerCase","map","length","Contacts","setContacts","useEffect","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAiDeA,MA/Cf,YAA0C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAClBC,EAAgB,CAAEC,UAAW,GAAIC,aAAc,IACrD,EAAwBC,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAEMC,EAAgB,SAACC,GACrBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAc/C,OACE,uBAAMC,SAZa,SAACJ,GACpBA,EAAEK,iBAEqB,KAAnBR,EAAKH,WAA0C,KAAtBG,EAAKF,cAChCW,MAAM,8BAGRd,EAAY,GAAD,mBAAKD,GAAL,CAAeM,KAC1BC,EAAQL,IAIR,UACE,8BACE,uBACEc,SAAUR,EACVI,MAAON,EAAKH,UACZQ,KAAK,YACLM,KAAK,OACLC,YAAY,gBAGhB,8BACE,uBACEF,SAAUR,EACVI,MAAON,EAAKF,aACZO,KAAK,eACLM,KAAK,SACLC,YAAY,eACZC,UAAU,SAGd,qBAAKC,GAAG,SAAR,SACE,kDCVOC,MAhCf,YAA6B,IAAbrB,EAAY,EAAZA,SACd,EAAwCK,mBAAS,IAAjD,mBAAOiB,EAAP,KAAqBC,EAArB,KAEMC,EAAexB,EAASyB,QAAO,SAACC,GACpC,OAAOC,OAAOC,KAAKF,GAAMG,MAAK,SAACC,GAAD,OAC5BJ,EAAKI,GACFC,WACAC,cACAC,SAASX,EAAaY,2BAI7B,OACE,gCACE,8CACA,uBACEhB,YAAY,SACZF,SAAU,SAACP,GAAD,OAAOc,EAAgBd,EAAEC,OAAOE,UAE5C,oBAAIQ,GAAG,OAAP,SACGI,GACCA,EAAaW,KAAI,SAACT,EAAMI,GAAP,OACf,+BACE,+BAAOJ,EAAKvB,YACZ,+BAAOuB,EAAKtB,iBAFL0B,QAMf,uBAAMV,GAAG,aAAT,0BAAoCI,EAAaY,OAAjD,WCLSC,MArBf,WACE,MAAgChC,mBAAS,CACvC,CAAEF,UAAW,SAAUC,aAAc,QACrC,CAAED,UAAW,SAAUC,aAAc,OACrC,CAAED,UAAW,OAAQC,aAAc,OACnC,CAAED,UAAW,QAASC,aAAc,SAJtC,mBAAOJ,EAAP,KAAiBsC,EAAjB,KAUA,OAJAC,qBAAU,WACRC,QAAQC,IAAIzC,KACX,CAACA,IAGF,qBAAKoB,GAAG,YAAR,SACE,sBAAKA,GAAG,MAAR,UACE,cAAC,EAAD,CAAMpB,SAAUA,IAChB,cAAC,EAAD,CAAMC,YAAaqC,EAAatC,SAAUA,UCNnC0C,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9feb29b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Form({ contacts, addContacts }) {\r\n  const initialValues = { full_name: \"\", phone_number: \"\" };\r\n  const [form, setForm] = useState(initialValues);\r\n\r\n  const onChangeInput = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (form.full_name === \"\" || form.phone_number === \"\") {\r\n      alert(\"Please fill in the blanks!\");\r\n    }\r\n\r\n    addContacts([...contacts, form]);\r\n    setForm(initialValues);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitForm}>\r\n      <div>\r\n        <input\r\n          onChange={onChangeInput}\r\n          value={form.full_name}\r\n          name=\"full_name\"\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          onChange={onChangeInput}\r\n          value={form.phone_number}\r\n          name=\"phone_number\"\r\n          type=\"number\"\r\n          placeholder=\"Phone Number\"\r\n          maxLength=\"10\"\r\n        />\r\n      </div>\r\n      <div id=\"button\">\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useState } from \"react\";\r\nfunction List({ contacts }) {\r\n  const [filteredText, setFilteredText] = useState(\"\");\r\n\r\n  const filteredData = contacts.filter((item) => {\r\n    return Object.keys(item).some((key) =>\r\n      item[key]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(filteredText.toLocaleLowerCase())\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contact List</h2>\r\n      <input\r\n        placeholder=\"search\"\r\n        onChange={(e) => setFilteredText(e.target.value)}\r\n      />\r\n      <ul id=\"list\">\r\n        {filteredData &&\r\n          filteredData.map((item, key) => (\r\n            <li key={key}>\r\n              <span>{item.full_name}</span>\r\n              <span>{item.phone_number}</span>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      <span id=\"totalCount\">Total Count ({filteredData.length})</span>\r\n    </div>\r\n  );\r\n}\r\nexport default List;\r\n","import { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\nfunction Contacts() {\r\n  const [contacts, setContacts] = useState([\r\n    { full_name: \"Justin\", phone_number: \"1234\" },\r\n    { full_name: \"Jaison\", phone_number: \"567\" },\r\n    { full_name: \"John\", phone_number: \"890\" },\r\n    { full_name: \"Maria\", phone_number: \"222\" }\r\n  ]);\r\n  useEffect(() => {\r\n    console.log(contacts);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <div id=\"box\">\r\n        <List contacts={contacts} />      \r\n        <Form addContacts={setContacts} contacts={contacts} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import \"./App.css\";\r\nimport \"./components/Contacts/style.css\";\r\nimport Contacts from \"./components/Contacts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Contacts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}